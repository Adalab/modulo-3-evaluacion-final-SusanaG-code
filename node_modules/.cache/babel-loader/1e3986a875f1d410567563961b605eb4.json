{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/susanagonzalezvejo/Desktop/Adalab/modulo-3-evaluacion-final-SusanaG-code/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CharacterList from \"./CharacterList\";\nimport api from \"../services/api\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterDetail from \"./CharacterDetail\";\n\nconst App = () => {\n  _s();\n\n  //guardamos datos del api en el state.\n  const [characters, setCharacters] = useState([]); //guardamos los datos del search en el state.\n\n  const [filterText, setFilterText] = useState(\"\");\n  useEffect(() => {\n    /*ponemos un then para que no sea asíncrono con el fetch*/\n    api.getDataFromApi().then(data => {\n      setCharacters(data);\n    });\n  }, []);\n\n  const handleChange = filterText => {\n    setFilterText(filterText);\n  }; //filtramos el listado del api con el nombre del personaje y que incluya las minúsculas.\n\n\n  const filteredCharacters = characters.filter(eachCharacter => {\n    return eachCharacter.name.toLowerCase().includes(filterText.toLocaleLowerCase().toUpperCase());\n  }); //Buscamos cada personaje por su id para que se renderice cuando hagamos click en el link.\n\n  const renderDetail = props => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    console.log(routeCharacterId);\n    const foundCharacter = characters.find(eachCharacter => {\n      return routeCharacterId === eachCharacter.id;\n    }); //si lo he encontrado\n\n    if (foundCharacter !== undefined) {\n      console.log(foundCharacter);\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        titledetail: \"Name: \",\n        namedetail: foundCharacter.name,\n        statusdetail: foundCharacter.status,\n        imagedetail: foundCharacter.image,\n        origindetail: foundCharacter.origin,\n        speciesdetail: foundCharacter.species,\n        episodesdestail: foundCharacter.episode.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    } else {\n      console.log(\"no encontrado\");\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Personaje no encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(CharacterList, {\n          className: \"card\",\n          characters: filteredCharacters,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/character-detail/:id\",\n        component: renderDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"7K38a/Z9u5zM0D35cSUnx1cEtAM=\");\n\n_c = App;\nApp.propTypes = {};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/susanagonzalezvejo/Desktop/Adalab/modulo-3-evaluacion-final-SusanaG-code/src/components/App.js"],"names":["React","useEffect","useState","CharacterList","api","Route","Switch","CharacterDetail","App","characters","setCharacters","filterText","setFilterText","getDataFromApi","then","data","handleChange","filteredCharacters","filter","eachCharacter","name","toLowerCase","includes","toLocaleLowerCase","toUpperCase","renderDetail","props","routeCharacterId","parseInt","match","params","id","console","log","foundCharacter","find","undefined","status","image","origin","species","episode","length","propTypes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C,CAFgB,CAGhB;;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAG,IAAAA,GAAG,CAACS,cAAJ,GAAqBC,IAArB,CAA2BC,IAAD,IAAU;AAClCL,MAAAA,aAAa,CAACK,IAAD,CAAb;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,YAAY,GAAIL,UAAD,IAAgB;AACnCC,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD,GAFD,CAbgB,CAiBhB;;;AACA,QAAMM,kBAAkB,GAAGR,UAAU,CAACS,MAAX,CAAmBC,aAAD,IAAmB;AAC9D,WAAOA,aAAa,CAACC,IAAd,CACJC,WADI,GAEJC,QAFI,CAEKX,UAAU,CAACY,iBAAX,GAA+BC,WAA/B,EAFL,CAAP;AAGD,GAJ0B,CAA3B,CAlBgB,CAwBhB;;AACA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,gBAAgB,GAAGC,QAAQ,CAACF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,gBAAZ;AAEA,UAAMO,cAAc,GAAGzB,UAAU,CAAC0B,IAAX,CAAiBhB,aAAD,IAAmB;AACxD,aAAOQ,gBAAgB,KAAKR,aAAa,CAACY,EAA1C;AACD,KAFsB,CAAvB,CAJ8B,CAO9B;;AACA,QAAIG,cAAc,KAAKE,SAAvB,EAAkC;AAChCJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACA,0BACE,QAAC,eAAD;AACE,QAAA,WAAW,EAAC,QADd;AAEE,QAAA,UAAU,EAAEA,cAAc,CAACd,IAF7B;AAGE,QAAA,YAAY,EAAEc,cAAc,CAACG,MAH/B;AAIE,QAAA,WAAW,EAAEH,cAAc,CAACI,KAJ9B;AAKE,QAAA,YAAY,EAAEJ,cAAc,CAACK,MAL/B;AAME,QAAA,aAAa,EAAEL,cAAc,CAACM,OANhC;AAOE,QAAA,eAAe,EAAEN,cAAc,CAACO,OAAf,CAAuBC;AAP1C;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAbD,MAaO;AACLV,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GA1BD;;AA4BA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,UAAU,EAAEhB,kBAFd;AAGE,UAAA,YAAY,EAAED;AAHhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,uBAAZ;AAAoC,QAAA,SAAS,EAAES;AAA/C;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CApED;;GAAMjB,G;;KAAAA,G;AAqENA,GAAG,CAACmC,SAAJ,GAAgB,EAAhB;AACA,eAAenC,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CharacterList from \"./CharacterList\";\nimport api from \"../services/api\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CharacterDetail from \"./CharacterDetail\";\n\nconst App = () => {\n  //guardamos datos del api en el state.\n  const [characters, setCharacters] = useState([]);\n  //guardamos los datos del search en el state.\n  const [filterText, setFilterText] = useState(\"\");\n\n  useEffect(() => {\n    /*ponemos un then para que no sea asíncrono con el fetch*/\n    api.getDataFromApi().then((data) => {\n      setCharacters(data);\n    });\n  }, []);\n\n  const handleChange = (filterText) => {\n    setFilterText(filterText);\n  };\n\n  //filtramos el listado del api con el nombre del personaje y que incluya las minúsculas.\n  const filteredCharacters = characters.filter((eachCharacter) => {\n    return eachCharacter.name\n      .toLowerCase()\n      .includes(filterText.toLocaleLowerCase().toUpperCase());\n  });\n\n  //Buscamos cada personaje por su id para que se renderice cuando hagamos click en el link.\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    console.log(routeCharacterId);\n\n    const foundCharacter = characters.find((eachCharacter) => {\n      return routeCharacterId === eachCharacter.id;\n    });\n    //si lo he encontrado\n    if (foundCharacter !== undefined) {\n      console.log(foundCharacter);\n      return (\n        <CharacterDetail\n          titledetail=\"Name: \"\n          namedetail={foundCharacter.name}\n          statusdetail={foundCharacter.status}\n          imagedetail={foundCharacter.image}\n          origindetail={foundCharacter.origin}\n          speciesdetail={foundCharacter.species}\n          episodesdestail={foundCharacter.episode.length}\n        />\n      );\n    } else {\n      console.log(\"no encontrado\");\n\n      return <p>Personaje no encontrado</p>;\n    }\n  };\n\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <CharacterList\n            className=\"card\"\n            characters={filteredCharacters}\n            handleChange={handleChange}\n          />\n        </Route>\n\n        <Route path=\"/character-detail/:id\" component={renderDetail}></Route>\n      </Switch>\n    </div>\n  );\n};\nApp.propTypes = {};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}