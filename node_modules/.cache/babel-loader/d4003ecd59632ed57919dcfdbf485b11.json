{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/susanagonzalezvejo/Desktop/Adalab/modulo-3-evaluacion-final-SusanaG-code/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport CharacterList from \"./CharacterList\";\nimport api from \"../services/api\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Loading from \"./Loading\";\nimport Header from \"./Header\";\n\nconst App = () => {\n  _s();\n\n  //guardamos datos del api en el state.\n  const [characters, setCharacters] = useState([]); //guardamos los datos del search en el state.\n\n  const [filterText, setFilterText] = useState(\"\"); //guardamos el dato de si está loading o no y empieza en booleano false\n\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    api.getDataFromApi().then(data => {\n      setCharacters(data);\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    });\n  }, []);\n\n  const handleChange = filterText => {\n    setFilterText(filterText);\n  }; //filtramos el listado del api con el nombre del personaje y que incluya las minúsculas.\n\n\n  const filteredCharacters = characters.filter(eachCharacter => {\n    return eachCharacter.name.toLowerCase().includes(filterText.toLowerCase().sort());\n  }); //Buscamos cada personaje por su id para que se renderice cuando hagamos click en el link.\n\n  const renderDetail = props => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    console.log(routeCharacterId);\n    const foundCharacter = characters.find(eachCharacter => {\n      return routeCharacterId === eachCharacter.id;\n    }); //si lo he encontrado\n\n    if (foundCharacter !== undefined) {\n      console.log(foundCharacter);\n      return /*#__PURE__*/_jsxDEV(CharacterDetail, {\n        titledetail: \"Name: \",\n        namedetail: foundCharacter.name,\n        statusdetail: foundCharacter.status,\n        imagedetail: foundCharacter.image,\n        origindetail: foundCharacter.origin,\n        speciesdetail: foundCharacter.species,\n        episodesdetail: foundCharacter.episode.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } else if (foundCharacter === undefined) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay personaje\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  console.log(isLoading);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [isLoading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(CharacterList, {\n          className: \"card\",\n          characters: filteredCharacters,\n          handleChange: handleChange,\n          filterText: filterText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/character-detail/:id\",\n        component: renderDetail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hxNtYzAc+tjPb5b+1kqr/5T6W/g=\");\n\n_c = App;\nApp.propTypes = {};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/susanagonzalezvejo/Desktop/Adalab/modulo-3-evaluacion-final-SusanaG-code/src/components/App.js"],"names":["React","useEffect","useState","CharacterList","api","Redirect","Route","Switch","CharacterDetail","Loading","Header","App","characters","setCharacters","filterText","setFilterText","isLoading","setIsLoading","getDataFromApi","then","data","setTimeout","handleChange","filteredCharacters","filter","eachCharacter","name","toLowerCase","includes","sort","renderDetail","props","routeCharacterId","parseInt","match","params","id","console","log","foundCharacter","find","undefined","status","image","origin","species","episode","length","propTypes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../stylesheets/App.scss\";\nimport CharacterList from \"./CharacterList\";\nimport api from \"../services/api\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport Loading from \"./Loading\";\nimport Header from \"./Header\";\nconst App = () => {\n  //guardamos datos del api en el state.\n  const [characters, setCharacters] = useState([]);\n  //guardamos los datos del search en el state.\n  const [filterText, setFilterText] = useState(\"\");\n  //guardamos el dato de si está loading o no y empieza en booleano false\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.getDataFromApi().then((data) => {\n      setCharacters(data);\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    });\n  }, []);\n\n  const handleChange = (filterText) => {\n    setFilterText(filterText);\n  };\n\n  //filtramos el listado del api con el nombre del personaje y que incluya las minúsculas.\n  const filteredCharacters = characters.filter((eachCharacter) => {\n    return eachCharacter.name\n      .toLowerCase()\n      .includes(filterText.toLowerCase().sort());\n  });\n\n  //Buscamos cada personaje por su id para que se renderice cuando hagamos click en el link.\n  const renderDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.id);\n    console.log(routeCharacterId);\n\n    const foundCharacter = characters.find((eachCharacter) => {\n      return routeCharacterId === eachCharacter.id;\n    });\n    //si lo he encontrado\n    if (foundCharacter !== undefined) {\n      console.log(foundCharacter);\n      return (\n        <CharacterDetail\n          titledetail=\"Name: \"\n          namedetail={foundCharacter.name}\n          statusdetail={foundCharacter.status}\n          imagedetail={foundCharacter.image}\n          origindetail={foundCharacter.origin}\n          speciesdetail={foundCharacter.species}\n          episodesdetail={foundCharacter.episode.length}\n        />\n      );\n    } else if (foundCharacter === undefined) {\n      return <p>No hay personaje</p>;\n    }\n  };\n  console.log(isLoading);\n\n  return (\n    <main className=\"main\">\n      <Header />\n      <Switch>\n        {isLoading === true ? <Loading /> : null}\n        <Route exact path=\"/\">\n          <CharacterList\n            className=\"card\"\n            characters={filteredCharacters}\n            handleChange={handleChange}\n            filterText={filterText}\n          />\n        </Route>\n        <Route path=\"/character-detail/:id\" component={renderDetail}></Route>\n      </Switch>\n    </main>\n  );\n};\n\nApp.propTypes = {};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}