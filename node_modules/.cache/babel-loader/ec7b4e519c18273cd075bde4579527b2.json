{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/susanagonzalezvejo/Desktop/Adalab/modulo-3-evaluacion-final-SusanaG-code/src/components/CharacterList.js\";\nimport \"../stylesheets/CharacterList.scss\";\nimport CharacterCard from \"./CharacterCard\";\nimport Filter from \"../components/Filter\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterList = props => {\n  const charactersList = props.characters.map((character, index) => {\n    return /*#__PURE__*/_jsxDEV(CharacterCard, {\n      imageUrl: character.image,\n      name: character.name,\n      species: character.species,\n      id: character.id\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  });\n  let filteredCharacters = characters.filter(eachCharacter => {\n    return eachCharacter.name.toLowerCase().includes(filterText.toLowerCase());\n  }).sort((charac1, charac2) => charac1.name > charac2.name ? 1 : -1);\n\n  if (filteredCharacters !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Filter, {\n        handleChange: props.handleChange,\n        filterText: props.filterText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"cardList\",\n        children: charactersList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"No hay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n};\n\n_c = CharacterList;\nCharacterList.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  species: PropTypes.string\n};\nexport default CharacterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"sources":["/Users/susanagonzalezvejo/Desktop/Adalab/modulo-3-evaluacion-final-SusanaG-code/src/components/CharacterList.js"],"names":["CharacterCard","Filter","PropTypes","CharacterList","props","charactersList","characters","map","character","index","image","name","species","id","filteredCharacters","filter","eachCharacter","toLowerCase","includes","filterText","sort","charac1","charac2","handleChange","propTypes","number","string"],"mappings":";;AAAA,OAAO,mCAAP;AACA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,cAAc,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AAChE,wBACE,QAAC,aAAD;AAEE,MAAA,QAAQ,EAAED,SAAS,CAACE,KAFtB;AAGE,MAAA,IAAI,EAAEF,SAAS,CAACG,IAHlB;AAIE,MAAA,OAAO,EAAEH,SAAS,CAACI,OAJrB;AAKE,MAAA,EAAE,EAAEJ,SAAS,CAACK;AALhB,OACOJ,KADP;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVsB,CAAvB;AAYA,MAAIK,kBAAkB,GAAGR,UAAU,CAChCS,MADsB,CACdC,aAAD,IAAmB;AACzB,WAAOA,aAAa,CAACL,IAAd,CACJM,WADI,GAEJC,QAFI,CAEKC,UAAU,CAACF,WAAX,EAFL,CAAP;AAGD,GALsB,EAOtBG,IAPsB,CAOjB,CAACC,OAAD,EAAUC,OAAV,KAAuBD,OAAO,CAACV,IAAR,GAAeW,OAAO,CAACX,IAAvB,GAA8B,CAA9B,GAAkC,CAAC,CAPzC,CAAzB;;AASA,MAAIG,kBAAkB,KAAK,CAA3B,EAA8B;AAC5B,wBACE;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,YAAY,EAAEV,KAAK,CAACmB,YADtB;AAEE,QAAA,UAAU,EAAEnB,KAAK,CAACe;AAFpB;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAI,QAAA,SAAS,EAAC,UAAd;AAAA,kBAA0Bd;AAA1B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXD,MAWO;AACL;AAAA;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;AACF,CApCD;;KAAMF,a;AAqCNA,aAAa,CAACqB,SAAd,GAA0B;AACxBX,EAAAA,EAAE,EAAEX,SAAS,CAACuB,MADU;AAExBd,EAAAA,IAAI,EAAET,SAAS,CAACwB,MAFQ;AAGxBd,EAAAA,OAAO,EAAEV,SAAS,CAACwB;AAHK,CAA1B;AAKA,eAAevB,aAAf","sourcesContent":["import \"../stylesheets/CharacterList.scss\";\nimport CharacterCard from \"./CharacterCard\";\nimport Filter from \"../components/Filter\";\nimport PropTypes from \"prop-types\";\n\nconst CharacterList = (props) => {\n  const charactersList = props.characters.map((character, index) => {\n    return (\n      <CharacterCard\n        key={index}\n        imageUrl={character.image}\n        name={character.name}\n        species={character.species}\n        id={character.id}\n      />\n    );\n  });\n\n  let filteredCharacters = characters\n    .filter((eachCharacter) => {\n      return eachCharacter.name\n        .toLowerCase()\n        .includes(filterText.toLowerCase());\n    })\n\n    .sort((charac1, charac2) => (charac1.name > charac2.name ? 1 : -1));\n\n  if (filteredCharacters !== 0) {\n    return (\n      <section>\n        <Filter\n          handleChange={props.handleChange}\n          filterText={props.filterText}\n        />\n\n        <ul className=\"cardList\">{charactersList}</ul>\n      </section>\n    );\n  } else {\n    <p className=\"error\">No hay</p>;\n  }\n};\nCharacterList.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  species: PropTypes.string,\n};\nexport default CharacterList;\n"]},"metadata":{},"sourceType":"module"}